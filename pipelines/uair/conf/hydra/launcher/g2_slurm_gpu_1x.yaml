# Uses Hydra Submitit Slurm launcher
_target_: hydra_plugins.hydra_submitit_launcher.submitit_launcher.SlurmLauncher
submitit_folder: ${hydra.sweep.dir}/.submitit/%j
timeout_min: 2880
nodes: 1
tasks_per_node: 1
cpus_per_task: 8
mem_gb: ${runtime.job_memory_gb}
partition: pierson
array_parallelism: 1
gpus_per_node: 1
name: UAIR
additional_parameters:
  gres: gpu:1
  wckey: ""
setup:
  - export HYDRA_FULL_ERROR=1
  - source ~/.bashrc
  - source /share/pierson/matt/UAIR/.venv/bin/activate
  - unset WANDB_DISABLED
  - if [ -n "$WANDB_MODE" ]; then export WANDB_MODE="$WANDB_MODE"; fi
  - if [ -n "$WANDB_BASE_URL" ]; then export WANDB_BASE_URL="$WANDB_BASE_URL"; fi
  - if [ -n "$WANDB_GROUP" ]; then export WANDB_GROUP="$WANDB_GROUP"; fi
  - export RULE_TUPLES_SILENT=1
  - export WANDB_SILENT=true
  # Disable wandb service for distributed environments (uses in-process mode)
  - export WANDB_DISABLE_SERVICE=true
  # Ensure Ray detached actors are created in a stable namespace per run
  - export RAY_NAMESPACE=${oc.env:WANDB_GROUP,uair}
  - export VLLM_WORKER_MULTIPROC_METHOD=spawn
  - export VLLM_USE_V1=1
  - export PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:64,expandable_segments:True
  - export CUDA_LAUNCH_BLOCKING=0
  - export TOKENIZERS_PARALLELISM=false
  # Let SLURM set CUDA_VISIBLE_DEVICES based on allocated GPUs for auto-detection
  # Fallback: disable CPU bind via env if launcher ignores srun_args
  - export SLURM_CPU_BIND=none

